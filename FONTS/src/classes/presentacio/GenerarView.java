/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package classes.presentacio;



import javax.swing.*;
import java.awt.*;


/**
 * Panell per a la vista de generacio.
 * Aquest panell proporciona una interficie d'usuari per a la generacio de contingut en l'aplicacio.
 * es utilitzat per mostrar opcions i controls relacionats amb la generacio de contingut.
 * 
 * @author marti
 */
public class GenerarView extends javax.swing.JPanel {
    private final PrincipalView vistaPrincipal; 
    

    /**
     * Inicialitza els components de la vista GenerarView.
     * Aquesta funcio s'encarrega d'assignar una nova instancia de la vista GenerarView
     * i de configurar els seus components inicials, com ara imatges i botons.
     *
     * @param vistaPrincipal La vista principal de l'aplicacio.
     */
    public GenerarView(PrincipalView vistaPrincipal) {
        this.vistaPrincipal = vistaPrincipal;
        initComponents();
        
        ImageIcon imageIcon = new javax.swing.ImageIcon(getClass().getResource("/images/flecha.png"));
        Image image = imageIcon.getImage(); // Convertir ImageIcon a Image
        Image newImage = image.getScaledInstance(50, 50, Image.SCALE_SMOOTH); // Escalar la imagen
        ImageIcon scaledImageIcon = new ImageIcon(newImage);
        bEnrere5.setIcon(scaledImageIcon);
    }
    
    String text_mida= "Introdueix la mida del kenken";
    String text_colocades= "Introdueix el nombre de colocades";
    String text_max= "Introdueix el nombre max de celes x cjt";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bGenerarKenken1 = new javax.swing.JButton();
        bEnrere5 = new javax.swing.JButton();
        tPantalla5 = new javax.swing.JLabel();
        tIndicacio = new javax.swing.JLabel();
        MenuMida = new javax.swing.JPanel();
        tMida = new javax.swing.JLabel();
        aMida = new javax.swing.JTextArea();
        MenuCelesColocades = new javax.swing.JPanel();
        tColocades = new javax.swing.JLabel();
        aColocades = new javax.swing.JTextArea();
        MenuMaxCeles = new javax.swing.JPanel();
        tMax = new javax.swing.JLabel();
        aMax = new javax.swing.JTextArea();
        MenuOpSimples = new javax.swing.JPanel();
        tOpSimples = new javax.swing.JLabel();
        CjtOp = new javax.swing.JPanel();
        cSuma = new javax.swing.JCheckBox();
        cMultiplicacio = new javax.swing.JCheckBox();
        cMax = new javax.swing.JCheckBox();
        cMin = new javax.swing.JCheckBox();
        MenuOpComplexes = new javax.swing.JPanel();
        tOpComplexes = new javax.swing.JLabel();
        CjtOp1 = new javax.swing.JPanel();
        cResta = new javax.swing.JCheckBox();
        cDivisio = new javax.swing.JCheckBox();
        aux = new javax.swing.JPanel();
        aux2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(204, 204, 255));

        bGenerarKenken1.setBackground(new java.awt.Color(0, 102, 102));
        bGenerarKenken1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 24)); // NOI18N
        bGenerarKenken1.setForeground(new java.awt.Color(255, 255, 255));
        bGenerarKenken1.setText("Generar Kenken");
        bGenerarKenken1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bGenerarKenken1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerarKenken1ActionPerformed(evt);
            }
        });

        bEnrere5.setBorderPainted(false);
        bEnrere5.setContentAreaFilled(false);
        bEnrere5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bEnrere5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnrere5ActionPerformed(evt);
            }
        });

        tPantalla5.setFont(new java.awt.Font("Segoe UI", 1, 55)); // NOI18N
        tPantalla5.setForeground(new java.awt.Color(0, 102, 102));
        tPantalla5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tPantalla5.setText("Generar Kenken");
        tPantalla5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tIndicacio.setFont(new java.awt.Font("Segoe UI", 1, 10)); // NOI18N
        tIndicacio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tIndicacio.setText("Els camps amb '*' son obligatoris");

        MenuMida.setBackground(new java.awt.Color(204, 204, 255));
        MenuMida.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        tMida.setBackground(new java.awt.Color(204, 204, 255));
        tMida.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tMida.setText("*Mida:");
        MenuMida.add(tMida);

        aMida.setColumns(1);
        aMida.setForeground(new java.awt.Color(153, 153, 153));
        aMida.setLineWrap(true);
        aMida.setRows(1);
        aMida.setTabSize(0);
        aMida.setText("Introdueix la mida del kenken");
        aMida.setWrapStyleWord(true);
        aMida.setMargin(new java.awt.Insets(8, 6, 2, 6));
        aMida.setMaximumSize(new java.awt.Dimension(170, 26));
        aMida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aMidaMousePressed(evt);
            }
        });
        MenuMida.add(aMida);

        MenuCelesColocades.setBackground(new java.awt.Color(204, 204, 255));
        MenuCelesColocades.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        tColocades.setBackground(new java.awt.Color(204, 204, 255));
        tColocades.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tColocades.setText("Celes colocades:");
        MenuCelesColocades.add(tColocades);

        aColocades.setColumns(1);
        aColocades.setForeground(new java.awt.Color(153, 153, 153));
        aColocades.setRows(1);
        aColocades.setTabSize(0);
        aColocades.setText("Introdueix el nombre de colocades");
        aColocades.setMargin(new java.awt.Insets(8, 6, 2, 6));
        aColocades.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aColocadesMousePressed(evt);
            }
        });
        MenuCelesColocades.add(aColocades);

        MenuMaxCeles.setBackground(new java.awt.Color(204, 204, 255));
        MenuMaxCeles.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        tMax.setBackground(new java.awt.Color(204, 204, 255));
        tMax.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tMax.setText("Max. Celes x Cjt:");
        MenuMaxCeles.add(tMax);

        aMax.setColumns(1);
        aMax.setForeground(new java.awt.Color(153, 153, 153));
        aMax.setRows(1);
        aMax.setText("Introdueix el nombre max de celes x cjt");
        aMax.setMargin(new java.awt.Insets(8, 6, 2, 6));
        aMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                aMaxMousePressed(evt);
            }
        });
        MenuMaxCeles.add(aMax);

        MenuOpSimples.setBackground(new java.awt.Color(204, 204, 255));
        MenuOpSimples.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        tOpSimples.setBackground(new java.awt.Color(204, 204, 255));
        tOpSimples.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tOpSimples.setText("*Operacions simples:");
        MenuOpSimples.add(tOpSimples);

        CjtOp.setBackground(new java.awt.Color(204, 204, 255));
        CjtOp.setLayout(new java.awt.GridLayout(1, 0));

        cSuma.setBackground(new java.awt.Color(204, 204, 255));
        cSuma.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        cSuma.setText("+");
        cSuma.setActionCommand("");
        cSuma.setAlignmentX(0.5F);
        cSuma.setBorder(null);
        cSuma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cSuma.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cSuma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cSumaMousePressed(evt);
            }
        });
        cSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSumaActionPerformed(evt);
            }
        });
        CjtOp.add(cSuma);

        cMultiplicacio.setBackground(new java.awt.Color(204, 204, 255));
        cMultiplicacio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cMultiplicacio.setText("X");
        cMultiplicacio.setAlignmentX(0.5F);
        cMultiplicacio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cMultiplicacio.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cMultiplicacio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cMultiplicacioMousePressed(evt);
            }
        });
        CjtOp.add(cMultiplicacio);

        cMax.setBackground(new java.awt.Color(204, 204, 255));
        cMax.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cMax.setText("MAX");
        cMax.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cMaxMousePressed(evt);
            }
        });
        cMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMaxActionPerformed(evt);
            }
        });
        CjtOp.add(cMax);

        cMin.setBackground(new java.awt.Color(204, 204, 255));
        cMin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cMin.setText("MIN");
        cMin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cMinMousePressed(evt);
            }
        });
        CjtOp.add(cMin);

        MenuOpSimples.add(CjtOp);

        MenuOpComplexes.setBackground(new java.awt.Color(204, 204, 255));
        MenuOpComplexes.setLayout(new java.awt.GridLayout(1, 0, 5, 0));

        tOpComplexes.setBackground(new java.awt.Color(204, 204, 255));
        tOpComplexes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tOpComplexes.setText("Operacions complexes:");
        MenuOpComplexes.add(tOpComplexes);

        CjtOp1.setBackground(new java.awt.Color(204, 204, 255));
        CjtOp1.setLayout(new java.awt.GridLayout(1, 0));

        cResta.setBackground(new java.awt.Color(204, 204, 255));
        cResta.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        cResta.setText("-");
        cResta.setAlignmentX(0.5F);
        cResta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cResta.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cResta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cRestaMousePressed(evt);
            }
        });
        CjtOp1.add(cResta);

        cDivisio.setBackground(new java.awt.Color(204, 204, 255));
        cDivisio.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cDivisio.setText("/");
        cDivisio.setAlignmentX(0.5F);
        cDivisio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cDivisio.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        cDivisio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cDivisioMousePressed(evt);
            }
        });
        CjtOp1.add(cDivisio);

        aux.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout auxLayout = new javax.swing.GroupLayout(aux);
        aux.setLayout(auxLayout);
        auxLayout.setHorizontalGroup(
            auxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );
        auxLayout.setVerticalGroup(
            auxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        CjtOp1.add(aux);

        aux2.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout aux2Layout = new javax.swing.GroupLayout(aux2);
        aux2.setLayout(aux2Layout);
        aux2Layout.setHorizontalGroup(
            aux2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );
        aux2Layout.setVerticalGroup(
            aux2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        CjtOp1.add(aux2);

        MenuOpComplexes.add(CjtOp1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MenuOpComplexes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(MenuOpSimples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuCelesColocades, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuMaxCeles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(MenuMida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tIndicacio, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(tPantalla5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(bGenerarKenken1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(100, 100, 100)))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(bEnrere5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(bEnrere5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addComponent(tPantalla5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addComponent(MenuMida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(MenuCelesColocades, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(MenuMaxCeles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(MenuOpSimples, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(MenuOpComplexes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(tIndicacio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bGenerarKenken1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void ini(){
        aMida.setText(text_mida);
        aColocades.setText(text_colocades);
        aMax.setText(text_max);
        aMida.setForeground(new java.awt.Color(153,153,153));
        aColocades.setForeground(new java.awt.Color(153,153,153));
        aMax.setForeground(new java.awt.Color(153,153,153));
        cSuma.setSelected(false);
        cResta.setSelected(false);
        cMultiplicacio.setSelected(false);
        cDivisio.setSelected(false);
        cMax.setSelected(false);
        cMin.setSelected(false);
    }
    private void bGenerarKenken1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerarKenken1ActionPerformed

        Integer mida, nColocades, maxCjt;

        Boolean[] operacions = new Boolean[7];
        operacions[0] = true;
        operacions[1] = cSuma.isSelected();
        operacions[2] = cResta.isSelected();
        operacions[3] = cMultiplicacio.isSelected();
        operacions[4] = cDivisio.isSelected();
        operacions[5] = cMax.isSelected();
        operacions[6] = cMin.isSelected();

        if(!isNumber(aMida.getText()) && !aMida.getText().equals(text_mida) ){
            JOptionPane.showMessageDialog(null, "El valor de mida ha de estar entre 1 i 12", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(!isNumber(aColocades.getText()) && !aColocades.getText().equals(text_colocades) ){
            JOptionPane.showMessageDialog(null, "El numero de colocades ha de ser inferior a la mida i no pot ser negatiu", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(!isNumber(aMax.getText()) && !aMax.getText().equals(text_max) ){
            JOptionPane.showMessageDialog(null, "El numero max de celes x cjt ha de ser inferior a 6 i no pot ser negatiu", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(aMida.getText().equals(text_mida) || Integer.valueOf(aMida.getText()) < 1 || Integer.valueOf(aMida.getText()) > 12 ){

            JOptionPane.showMessageDialog(null, "El valor de mida ha de estar entre 1 i 12", "Advertencia", JOptionPane.WARNING_MESSAGE);
            mida = 0;
            return;

        }else{
        
            mida = Integer.valueOf(aMida.getText());
        }

        if(aColocades.getText().equals(text_colocades)){
            nColocades = 0;
        }else{
            if(Integer.valueOf(aColocades.getText()) > mida || Integer.valueOf(aColocades.getText()) < 0 ||!isNumber(aColocades.getText())){
                JOptionPane.showMessageDialog(null, "El numero de colocades ha de ser inferior a la mida i no pot ser negatiu", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }else{
                nColocades = Integer.valueOf(aColocades.getText());
            }
        }

        if(aMax.getText().equals(text_max)){
            maxCjt = 3;
        }else{
            if(Integer.valueOf(aMax.getText()) > 5 || Integer.valueOf(aMax.getText()) < 0 || !isNumber(aMax.getText())){
                JOptionPane.showMessageDialog(null, "El numero max de celes x cjt ha de ser inferior a 6 i no pot ser negatiu", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }else{
                maxCjt = Integer.valueOf(aMax.getText());
            }
        }
        
        if(operacions[1] == false && operacions[3] == false && operacions[5] == false && operacions[6] == false ){

            JOptionPane.showMessageDialog(null, "Has de seleccioanr minim una operacio basica", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;

        }
        

        try {
            Integer idKenken = vistaPrincipal.generarKenken(mida, maxCjt, nColocades, operacions);
            vistaPrincipal.setBd(Boolean.FALSE);
            vistaPrincipal.setIdKenken(idKenken);
            
            //vistaPrincipal.crearKenken2(kenkenJSON,"JugantView","jugable");
            //vistaPrincipal.showPanel("JugantView");
            String nom = vistaPrincipal.getNomJugador();
            vistaPrincipal.crearPartida(idKenken, nom);
            String kenkenJSON = vistaPrincipal.obtenirKenkenPartida(idKenken,nom);
            
            vistaPrincipal.crearKenken2(kenkenJSON,"JugantView","jugable");
            vistaPrincipal.showPanel("JugantView");
        } catch (Exception e) {
            // Handle the exception here
            JOptionPane.showMessageDialog(null, "Error en generar el Kenken" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            //e.printStackTrace();
        }

    }//GEN-LAST:event_bGenerarKenken1ActionPerformed
    
    

    
    private void bEnrere5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnrere5ActionPerformed
        // TODO add your handling code here:
        vistaPrincipal.showPanel("SeleccioView");
    }//GEN-LAST:event_bEnrere5ActionPerformed

    private void cSumaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cSumaMousePressed
        // TODO add your handling code here:
        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_cSumaMousePressed

    private void cSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSumaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cSumaActionPerformed

    private void cMultiplicacioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMultiplicacioMousePressed
        // TODO add your handling code here:
        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_cMultiplicacioMousePressed

    private void cMaxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMaxMousePressed
        // TODO add your handling code here:
        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_cMaxMousePressed

    private void cMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cMaxActionPerformed

    private void cMinMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cMinMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cMinMousePressed

    private void cRestaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cRestaMousePressed
        // TODO add your handling code here:
        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_cRestaMousePressed

    private void cDivisioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cDivisioMousePressed
        // TODO add your handling code here:
        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_cDivisioMousePressed

    private void aMidaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aMidaMousePressed
        // TODO add your handling code here:
        if(aMida.getText().equals(text_mida)){
            aMida.setText("");
            aMida.setForeground(Color.black);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_aMidaMousePressed

    private void aColocadesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aColocadesMousePressed
        if(aColocades.getText().equals(text_colocades)){
            aColocades.setText("");
            aColocades.setForeground(Color.black);
        }

        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aMax.getText()).isEmpty()){
            aMax.setText(text_max);
            aMax.setForeground(Color.gray);
        }
    }//GEN-LAST:event_aColocadesMousePressed

    private void aMaxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aMaxMousePressed
                // TODO add your handling code here:
        if(aMax.getText().equals(text_max)){
            aMax.setText("");
            aMax.setForeground(Color.black);
        }

        if(String.valueOf(aMida.getText()).isEmpty()){
            aMida.setText(text_mida);
            aMida.setForeground(Color.gray);
        }
        if(String.valueOf(aColocades.getText()).isEmpty()){
            aColocades.setText(text_colocades);
            aColocades.setForeground(Color.gray);
        }
    }//GEN-LAST:event_aMaxMousePressed

private static boolean isNumber(String text) {
    try {
        Double.parseDouble(text);  // Intenta convertir la cadena a un numero
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CjtOp;
    private javax.swing.JPanel CjtOp1;
    private javax.swing.JPanel MenuCelesColocades;
    private javax.swing.JPanel MenuMaxCeles;
    private javax.swing.JPanel MenuMida;
    private javax.swing.JPanel MenuOpComplexes;
    private javax.swing.JPanel MenuOpSimples;
    private javax.swing.JTextArea aColocades;
    private javax.swing.JTextArea aMax;
    private javax.swing.JTextArea aMida;
    private javax.swing.JPanel aux;
    private javax.swing.JPanel aux2;
    private javax.swing.JButton bEnrere5;
    private javax.swing.JButton bGenerarKenken1;
    private javax.swing.JCheckBox cDivisio;
    private javax.swing.JCheckBox cMax;
    private javax.swing.JCheckBox cMin;
    private javax.swing.JCheckBox cMultiplicacio;
    private javax.swing.JCheckBox cResta;
    private javax.swing.JCheckBox cSuma;
    private javax.swing.JLabel tColocades;
    private javax.swing.JLabel tIndicacio;
    private javax.swing.JLabel tMax;
    private javax.swing.JLabel tMida;
    private javax.swing.JLabel tOpComplexes;
    private javax.swing.JLabel tOpSimples;
    private javax.swing.JLabel tPantalla5;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package classes.presentacio;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import java.time.Duration;
import javax.swing.JOptionPane;
/**
 * Panell per a la vista del joc en curs.
 * Aquest panell proporciona una interficie d'usuari per al joc en curs en l'aplicacio.
 * es utilitzat per mostrar el taulell de joc i interactuar amb les funcionalitats com borrar i obtenir pistes.
 * @author marti
 */
public class JugantView extends javax.swing.JPanel {
    private final PrincipalView vistaPrincipal; 
    private Timer timer;
    private Duration seconds;
    private Boolean running;
    /**
     * Obte el panell del taulell de joc.
     * Aquest metode retorna el panell del taulell de joc, on es mostren les celles del joc.
     * @param vistaPrincipal La vista principal de l'aplicacio.
     */
    public JugantView(PrincipalView vistaPrincipal) {
        this.vistaPrincipal = vistaPrincipal;
        initComponents();
        running= false;
        seconds = Duration.ofSeconds(0);
        timer = new Timer(1000, new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent e){
                if(running){
                    seconds = seconds.plusSeconds(1);
                    long totalSeconds = seconds.getSeconds();
                    long hours = totalSeconds / 3600;
                    long minutes = (totalSeconds % 3600) / 60;
                    long secs = totalSeconds % 60;
                    tCrono1.setText(String.format("%02d:%02d:%02d", hours, minutes, secs));
                }
            }
        });
        timer.start();
        
        running = true;
        
        ImageIcon imageIcon = new javax.swing.ImageIcon(getClass().getResource("/images/flecha.png"));
        Image image = imageIcon.getImage(); // Convertir ImageIcon a Image
        Image newImage = image.getScaledInstance(50, 50, Image.SCALE_SMOOTH); // Escalar la imagen
        ImageIcon scaledImageIcon = new ImageIcon(newImage);
        bEnrere7.setIcon(scaledImageIcon);
        
        ImageIcon imageIcon2 = new javax.swing.ImageIcon(getClass().getResource("/images/goma.png"));
        Image image2 = imageIcon2.getImage(); // Convertir ImageIcon a Image
        Image newImage2 = image2.getScaledInstance(40, 40, Image.SCALE_SMOOTH); // Escalar la imagen
        ImageIcon scaledImageIcon2 = new ImageIcon(newImage2);
        bBorrar.setIcon(scaledImageIcon2);
        
        ImageIcon imageIcon3 = new javax.swing.ImageIcon(getClass().getResource("/images/clue.png"));
        Image image3 = imageIcon3.getImage(); // Convertir ImageIcon a Image
        Image newImage3 = image3.getScaledInstance(50, 50, Image.SCALE_SMOOTH); // Escalar la imagen
        ImageIcon scaledImageIcon3 = new ImageIcon(newImage3);
        bPista.setIcon(scaledImageIcon3);
    }
    /**
     * Aquest metode retorna el panell del taulell de joc, on es mostren les celles del joc.
     *
     * @return El panell del taulell de joc.
     */
    public JPanel getTaulell(){
        seconds = vistaPrincipal.getCronoPartida();
        Integer valor = vistaPrincipal.getPistesPartida();
        tPista.setText("Pistas: "+String.valueOf(valor)+"/3");
        running = true;
        return panel1;
    }
    /**
     * Aquest metode retorna el panell on es mostren els numeros disponibles per a ser collocats al taulell de joc.
     *
     * @return El panell dels numeros de taulell.
     */
    public JPanel getTaulellNumeros(){
        return numeros;
    }
    
    public void getTempsPartida(){
        vistaPrincipal.setTempsPartida(seconds);
        //vistaPrincipal.showPanel("RankingView");
    }
    public Duration getTemps(){
        return seconds;
        //vistaPrincipal.showPanel("RankingView");
    }
    
    public void stopTemps(){
        running = false;
    }
    
    public void continueTemps(){
        running = true;
    }
    
    public void finalitzar(){
        String currentTime = tCrono1.getText();
        JOptionPane.showMessageDialog(this, "Enhorabona! Has finalitzat el KENKEN amb un temps de: " + currentTime, "Informacio", JOptionPane.INFORMATION_MESSAGE);
        //vistaPrincipal.showPanel("JocView");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelinfo1 = new javax.swing.JPanel();
        bEnrere7 = new javax.swing.JButton();
        tCrono1 = new javax.swing.JLabel();
        aux4 = new javax.swing.JPanel();
        tPista = new javax.swing.JLabel();
        bPista = new javax.swing.JButton();
        eines = new javax.swing.JPanel();
        bBorrar = new javax.swing.JButton();
        numeros = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(204, 204, 255));
        setMaximumSize(new java.awt.Dimension(800, 800));
        setMinimumSize(new java.awt.Dimension(800, 800));
        setPreferredSize(new java.awt.Dimension(800, 800));

        panelinfo1.setBackground(new java.awt.Color(204, 204, 255));
        panelinfo1.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        bEnrere7.setBorderPainted(false);
        bEnrere7.setContentAreaFilled(false);
        bEnrere7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bEnrere7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnrere7ActionPerformed(evt);
            }
        });
        panelinfo1.add(bEnrere7);

        tCrono1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tCrono1.setText("Crono: 0.0");
        panelinfo1.add(tCrono1);

        aux4.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout aux4Layout = new javax.swing.GroupLayout(aux4);
        aux4.setLayout(aux4Layout);
        aux4Layout.setHorizontalGroup(
            aux4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 152, Short.MAX_VALUE)
        );
        aux4Layout.setVerticalGroup(
            aux4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        panelinfo1.add(aux4);

        tPista.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tPista.setText("Pistas: 3/3");
        panelinfo1.add(tPista);

        bPista.setBackground(new java.awt.Color(204, 204, 255));
        bPista.setBorder(null);
        bPista.setBorderPainted(false);
        bPista.setContentAreaFilled(false);
        bPista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bPista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPistaActionPerformed(evt);
            }
        });
        panelinfo1.add(bPista);

        eines.setBackground(new java.awt.Color(204, 204, 255));
        eines.setMaximumSize(new java.awt.Dimension(800, 50));
        eines.setMinimumSize(new java.awt.Dimension(800, 50));
        eines.setPreferredSize(new java.awt.Dimension(800, 50));

        bBorrar.setBorder(null);
        bBorrar.setBorderPainted(false);
        bBorrar.setContentAreaFilled(false);
        bBorrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bBorrar.setPreferredSize(new java.awt.Dimension(50, 50));
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });

        numeros.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout einesLayout = new javax.swing.GroupLayout(eines);
        eines.setLayout(einesLayout);
        einesLayout.setHorizontalGroup(
            einesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, einesLayout.createSequentialGroup()
                .addGap(730, 730, 730)
                .addComponent(bBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addGroup(einesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(einesLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(numeros, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        einesLayout.setVerticalGroup(
            einesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(einesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(einesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(einesLayout.createSequentialGroup()
                    .addGap(4, 4, 4)
                    .addComponent(numeros, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(5, 5, 5)))
        );

        panel1.setBackground(new java.awt.Color(0, 0, 0));
        panel1.setPreferredSize(new java.awt.Dimension(340, 340));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 659, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelinfo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addComponent(eines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(panelinfo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                .addGap(15, 15, 15)
                .addComponent(eines, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(45, 45, 45))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bEnrere7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnrere7ActionPerformed
        // TODO add your handling code here:
        //setter
        vistaPrincipal.setTempsPartida(seconds);
        
        vistaPrincipal.showPanel("JocView");
    }//GEN-LAST:event_bEnrere7ActionPerformed

    private void bPistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPistaActionPerformed
        // TODO add your handling code here:
        //pedir pista
        String t = tPista.getText();
        Integer valor = Integer.parseInt(String.valueOf(t.charAt(8)));
        if(valor >= 1){
            Integer x = vistaPrincipal.getSeleccionado_x();
            Integer y = vistaPrincipal.getSeleccionado_y();
            if(x != -1 && y != -1){
                try{
                    vistaPrincipal.ajuda(x, y);
                    valor = valor - 1;
                    vistaPrincipal.getValorCela(x, y);
                    //cosetes a fer
                } catch (Exception e){
                    if(e.getMessage().equals("Aquesta cella ja te un valor. Esborra'l abans de demanar pista.")){
                        JOptionPane.showMessageDialog(null, "Error al solucionar el Kenken: " + e.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                    } else {
                        Object[] options = {"SI", "NO"};

                        // Muestra el JOptionPane
                        Integer option = JOptionPane.showOptionDialog(
                            null,
                            "La teva solucio proposada es incorrecta, vols saber una possible solucio d'aquesta cella?:",
                            "Confirmacio",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            options,
                            options[0]
                        );



                        // Verifica que opcion fue seleccionada
                        if (option == JOptionPane.YES_OPTION) {
                            try{
                                vistaPrincipal.ajudaExtra(x, y);
                                valor = valor - 1;
                                vistaPrincipal.getValorCela(x, y);
                            } catch (Exception e2){
                                JOptionPane.showMessageDialog(null, "Error al solucionar el Kenken: " + e2.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
                            }
                        }
                    }
                }
                tPista.setText("Pistas: "+String.valueOf(valor)+"/3");
            } else JOptionPane.showMessageDialog(null, "Selecciona una cella Primer!", "Warning", JOptionPane.WARNING_MESSAGE);
        }else{
            JOptionPane.showMessageDialog(null, "No et queden Pistes", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        vistaPrincipal.desferSeleccionat();
    }//GEN-LAST:event_bPistaActionPerformed

    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        // TODO add your handling code here:
        vistaPrincipal.borrar();
    }//GEN-LAST:event_bBorrarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel aux4;
    private javax.swing.JButton bBorrar;
    private javax.swing.JButton bEnrere7;
    private javax.swing.JButton bPista;
    private javax.swing.JPanel eines;
    private javax.swing.JPanel numeros;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panelinfo1;
    private javax.swing.JLabel tCrono1;
    private javax.swing.JLabel tPista;
    // End of variables declaration//GEN-END:variables
}
